@model PaginatedList<TiendaPadel.Models.Pedido>

@{
    ViewData["Title"] = "Pedidos";
}



<div class="text-center my-3">
    <h1>Estados</h1>
    <a class="btn btn-outline-success my-3" asp-action="Create">Nuevos Pedidos <i class="bi bi-plus-lg"></i></a>
</div>



<table class="table table-striped">
    @* Agregar un cuadro de búsqueda en la vista Index de Avisos *@
    <form asp-action="Index">
        <div class="container">
            <div class="row align-items-start text-center">
                <div class="col-md-3 my-1 form-floating">
                    <input type="date" name="fecha" class="form-control" id="floatingInput"
                           value="@ViewData["BusquedaFecha"]" />
                    <label for="floatingInput">Fecha del Pedido</label>
                </div>
                <div class="col-md-3 form-floating my-1">
                    <input type="text" name="strCadenaUsuario" id="floatingInput"
                           value="@ViewData["BusquedaUsuario"]" class="form-control" />
                    <label class="control-label">Usuario</label>
                </div>
                <div class="col-md-3 my-1">
                    <select name="strCadenaEstado" class="form-select">
                        <option value="">Todos los Estados</option>
                        <option value="Pendiente" selected='@(ViewData["strCadenaEstado"]?.ToString() == "Pendiente")'>Pendientes</option>
                        <option value="Realizado" selected='@(ViewData["strCadenaEstado"]?.ToString() == "Realizado")'>Realizados</option>
                    </select>
                </div>

                <div class="col-md-3 align-self-center my-1">
                    <input type="submit" value="Buscar" class="btn btn-default" /> |
                    <a asp-action="Index" class="btn btn-default">Lista completa</a>
                </div>
            </div>
        </div>
    </form>

    <thead class="bg-dark text-light">
        <tr>
            <th>
                Fecha
            </th>
            <th>
                Confirmado
            </th>
            <th>
                Preparado
            </th>
            <th>
                Enviado
            </th>
            <th>
                Cobrado
            </th>
            <th>
                Devuelto
            </th>
            <th>
                Anulado
            </th>
            <th>
                Cliente
            </th>
            <th>
                Estado
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Confirmado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preparado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Enviado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cobrado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Devuelto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Anulado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cliente.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado.Descripcion)
            </td>
            <td>
                    <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                    <a class="btn btn-outline-dark" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i></a>
                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-x-lg"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>

@* Poner botones de página Siguiente y Anterior *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="text-center">
    <p>Numero de páginas: @Model.TotalPages</p>
</div>
<div class="btn-group text-center w-20 justify-content-center" role="group">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-outline-secondary @prevDisabled">
        Anterior
    </a>
    <button class="btn btn-dark text-light">@Model.PageIndex</button>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-outline-secondary @nextDisabled">
        Siguiente
    </a>
</div>

