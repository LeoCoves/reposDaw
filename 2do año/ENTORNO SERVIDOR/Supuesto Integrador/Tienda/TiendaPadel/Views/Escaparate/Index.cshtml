@model PaginatedList<TiendaPadel.Models.Producto>
@{
    ViewData["Title"] = "Escaparate";
    var categorias = ViewData["Categorias"] as IEnumerable<TiendaPadel.Models.Categoria>;
}

<style>
    .btn-link.text-dark:hover {
        color: white; /* Cambia el color del texto a blanco */
    }
</style>

@if(@TempData["PedidoConfirmado"] != null){
    <div class="mt-3 alert alert-success w-40 float-end" role="alert">
        <i class="bi bi-bag-check-fill"></i>
        @TempData["PedidoConfirmado"]
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const alert = document.querySelector(".alert.alert-success");

            if (alert) {
                setTimeout(() => {
                    alert.style.transition = "opacity 0.5s ease";
                    alert.style.opacity = "0";

                    setTimeout(() => {
                        alert.remove();
                    }, 500); 
                }, 3000);
            }
        });
    </script>
}

<div class="w-100">
    <p class="tex-center">ESCAPARATE</p>
</div>

<div>
    @if (User.IsInRole("Usuario"))
    {
        <div class="container">
            <p>CATEGORIAS</p>
                <a class="btn btn-outline-dark m-1" asp-action="Index" asp-route-idCategoria="">
                    Quitar filtros
                </a>
            @if (categorias != null)
            {
                foreach (var categoria in categorias)
                {

                        <a class="btn btn-outline-dark m-1" asp-action="Index" asp-route-idCategoria="@categoria.Id">
                            @categoria.Descripcion
                        </a>
                }
            }
        </div>
    }
</div>



<div class="container px-4 px-lg-5 mt-5">
    <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
        @foreach (var item in Model)
        {
            <div class="col mb-5">
                <div class="card h-100">
                    <img src="~/imagenes/@item.Imagen" class="card-img-top" alt="Imagen de @item.Descripcion">
                    <div class="card-body p-4">
                        <div class="text-center">
                            <h5 class="card-title">@(item.Descripcion)</h5>
                            <p class="card-text">@(item.Precio)€</p>
                        </div>
                    </div>
                    
                    <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                        <div class="text-center">
                            @if (item.Stock < 10)
                            {
                                <p class="text-danger">QUEDAN POCAS UNIDADES</p>
                            }
                            <a asp-controller="Escaparate" asp-action="AgregarCarrito" asp-route-id="@item.Id" class="btn btn-primary">Agregar al Carrito</a>
                        </div>
                    </div>
                </div>
            </div>
        }
   </div>
</div>

@* Poner botones de página Siguiente y Anterior *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="text-center">
    <p>Numero de páginas: @Model.TotalPages</p>
</div>
<div class="btn-group text-center w-20 justify-content-center" role="group">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-outline-secondary @prevDisabled">
        Anterior
    </a>
    <button class="btn btn-dark text-light">@Model.PageIndex</button>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-outline-secondary @nextDisabled">
        Siguiente
    </a>
</div>

