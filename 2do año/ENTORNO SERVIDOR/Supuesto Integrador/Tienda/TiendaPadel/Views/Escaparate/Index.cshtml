@model PaginatedList<TiendaPadel.Models.Producto>
@{
    ViewData["Title"] = "Escaparate";
    var categorias = ViewData["Categorias"] as IEnumerable<TiendaPadel.Models.Categoria>;
}

<style>
    .btn-link.text-dark:hover {
        color: white; /* Cambia el color del texto a blanco */
    }
    /* Estilos personalizados */
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .card-img-top {
        object-fit: cover;
        height: 300px; /* Ajusta la altura de la imagen */
    }

    .btn-dark {
        background-color: #000;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-dark:hover {
            background-color: #333;
        }
    .container-custom{
        margin: 0 !important;
        padding: 0 !important;
        max-width: 100%;
    }
</style>

@if(@TempData["PedidoConfirmado"] != null){
    <div class="mt-3 alert alert-success w-100" role="alert">
        <i class="bi bi-bag-check-fill"></i>
        @TempData["PedidoConfirmado"]
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const alert = document.querySelector(".alert.alert-success");

            if (alert) {
                setTimeout(() => {
                    alert.style.transition = "opacity 0.5s ease";
                    alert.style.opacity = "0";

                    setTimeout(() => {
                        alert.remove();
                    }, 500); 
                }, 3000);
            }
        });
    </script>
}

<div class="row text-center">
    <p>ESCAPARATE</p>
</div>

<div>
    @*@if (User.IsInRole("Usuario"))
    {*@
        <div class="container">
            <p>CATEGORIAS</p>
                <a class="btn btn-outline-dark m-1" asp-action="Index" asp-route-idCategoria="">
                    Quitar filtros
                </a>
            @if (categorias != null)
            {
                foreach (var categoria in categorias)
                {
                        <a class="btn btn-outline-dark m-1" asp-action="Index" asp-route-idCategoria="@categoria.Id">
                            @categoria.Descripcion
                        </a>
                }
            }
        </div>
    @*}*@
</div>



<div class="container-custom mt-5">
    <div class="row gx-2 gx-lg-3 row-cols-2 row-cols-sm-2 row-cols-sm-3 row-cols-md-4 row-cols-xl-5 justify-content-center">
        @foreach (var item in Model)
        {
            @if (item.Escaparate == true)
            {
                <div class="col mb-5">
                    <div class="card h-80 shadow-sm border-0">
                        <!-- Imagen del producto -->
                        <a asp-controller="Escaparate" asp-action="AgregarCarrito" asp-route-id="@item.Id" class="text-decoration-none">
                            <img src="~/imagenes/@item.Imagenes.First().Url" class="card-img-top" alt="Imagen de @item.Descripcion">
                        </a>

                        <!-- Badge de "Quedan pocas unidades" -->
                        @if (item.Stock < 10)
                        {
                            <div class="position-absolute top-0 start-0 m-2">
                                <span class="badge bg-danger">QUEDAN POCAS UNIDADES</span>
                            </div>
                        }

                        <!-- Detalles del producto -->
                        <div class="card-body p-3">
                            <div class="text-start">
                                <!-- Nombre del producto -->
                                <h5 class="card-title mb-1">@item.Descripcion</h5>
                                <!-- Precio -->
                                <p class="card-text mb-1 fw-bold">@item.Precio.ToString("0.00")€</p>
                                <!-- Botón de "Añadir al carrito" -->
                                <a asp-controller="Escaparate" asp-action="AgregarCarrito" asp-route-id="@item.Id" class="btn btn-dark w-100">
                                    Añadir al carrito
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@* Poner botones de página Siguiente y Anterior *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="btn-group text-center w-20 justify-content-center" role="group">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-outline-secondary @prevDisabled">
        Anterior
    </a>
    <button class="btn btn-dark text-light">@Model.PageIndex</button>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-outline-secondary @nextDisabled">
        Siguiente
    </a>
</div>

