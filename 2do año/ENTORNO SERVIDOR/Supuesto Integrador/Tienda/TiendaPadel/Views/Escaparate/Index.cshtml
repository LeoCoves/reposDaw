@model PaginatedList<TiendaPadel.Models.Producto>
@{
    ViewData["Title"] = "Escaparate";
    var categorias = ViewData["Categorias"] as IEnumerable<TiendaPadel.Models.Categoria>;
    var openCarrito = ViewData["OpenCarrito"] != null && (bool)ViewData["OpenCarrito"];
}

<style>
    .card {
        height: 500px; /* Establece una altura fija para todas las cards */
    }

    .card-img-top {
        height: 350px; /* Establece una altura fija para la imagen */
        object-fit: cover; /* Hace que la imagen se recorte proporcionalmente para llenar el contenedor */
    }

    .card-body {
        height: calc(100% - 200px); /* Ajusta la altura del cuerpo de la card (restando la altura de la imagen) */
    }

</style>



        <div class="container">
    <h3 class="fuente-editorial">CATEGORIAS</h3>
                <a class="btn btn-outline-dark m-1" asp-action="Index" asp-route-idCategoria="">
                    Quitar filtros
                </a>
            @if (categorias != null)
            {
                foreach (var categoria in categorias)
                {
                        <a class="btn btn-outline-dark m-1" asp-action="Index" asp-route-idCategoria="@categoria.Id">
                            @categoria.Descripcion
                        </a>
                }
            }
        </div>


<div class="container-custom mt-5">
    <div class="row gx-2 gx-lg-3 row-cols-2 row-cols-sm-2 row-cols-sm-3 row-cols-md-4 row-cols-xl-5 justify-content-center">
        @foreach (var item in Model)
        {
            @if (item.Escaparate == true)
            {
                <div class="col mb-5">
                    <div class="card shadow-sm border-0">
                        
                        @if (item.Imagenes.Any())
                        {
                            <a asp-controller="Escaparate" asp-action="AgregarCarrito" asp-route-id="@item.Id" class="text-decoration-none">
                                <img src="~/imagenes/@item.Imagenes.First().Url" class="card-img-top" alt="Imagen de @item.Descripcion">
                            </a>
                        }
                        else
                        {
                            <img src="~/imagenes/sinImagen.webp" class="card-img-top" alt="Imagen no disponible">
                        }

                        <!-- Badge de "Quedan pocas unidades" -->
                        @if (item.Stock < 10)
                        {
                            <div class="position-absolute top-0 start-0 m-2">
                                <span class="badge bg-danger">QUEDAN POCAS UNIDADES</span>
                            </div>
                        }


                        <div class="card-body p-3">
                            <div class="text-start">
                                <h5 class="card-title mb-1">@item.Descripcion</h5>
                                <p class="card-text mb-1 fw-bold">@item.Precio.ToString("0.00")€</p>
                                <a asp-controller="Escaparate" asp-action="AgregarCarrito" asp-route-id="@item.Id" class="btn btn-success w-100">
                                    Añadir al carrito
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

            }
        }
    </div>
</div>

@* Poner botones de página Siguiente y Anterior *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="btn-group text-center w-20 justify-content-center" role="group">
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-outline-secondary @prevDisabled">
        Anterior
    </a>
    <button class="btn btn-dark text-light">@Model.PageIndex</button>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-outline-secondary @nextDisabled">
        Siguiente
    </a>
</div>




