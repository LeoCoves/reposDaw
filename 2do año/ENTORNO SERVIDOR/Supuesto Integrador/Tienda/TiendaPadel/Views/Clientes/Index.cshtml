@model PaginatedList<TiendaPadel.Models.Cliente>

@{
    ViewData["Title"] = "Clientes";
}

<div class="text-center my-3">
    <h1>Clientes</h1>
   
</div>

@* Agregar un cuadro de búsqueda en la vista Index de Avisos *@
<form asp-action="Index">
    <div class="card bg-dark my-5">
        <div class="card-body text-center d-flex flex-wrap justify-content-around">
            <div class="col-md-3 my-1 form-floating">
                <input type="text" name="strCadenaBusqueda" id="floatingInput"
                       value="@ViewData["BusquedaActual"]" class="form-control" />
                <label for="floatingInput">NIF</label>
            </div>
            <div class="col-md-3 my-1 form-floating">
                <input type="text" name="strCadenaEmail" id="floatingInput"
                       value="@ViewData["BusquedaEmail"]" class="form-control" />
                <label for="floatingInput">Email</label>
            </div>
            <div class="col-md-3 my-1 form-floating">
                <input type="text" name="strCadenaPoblacion" id="floatingInput"
                       value="@ViewData["BusquedaPoblacion"]" class="form-control" />
                <label for="floatingInput">Poblacion</label>
            </div>
        </div>
        <div class="card-footer  d-flex justify-content-end">
                <div class="col-md-2 btn-group mx-2">
                    <button type="submit" value="Buscar" class="btn btn-outline-light"><i class="bi bi-search"></i></button>
                    <a asp-action="Index" class="btn btn-outline-light">Ver todo</a>
                </div>
            <div class="col-md-2 text-end">
                <a class="btn btn-success" asp-action="Create">Nuevo Cliente/a <i class="bi bi-plus-lg"></i></a>
            </div>
        </div>
    </div>
</form>

<table class="table table-striped">
    <thead class="bg-dark text-light">
        <tr>
            <th class="text-light">
                Nombre
            </th>
            <th class="text-light">
                NIF
            </th>
            <th class="text-light">
                Email
            </th>
            <th class="text-light">
                Teléfono
            </th>
            <th class="text-light">
                Dirección
            </th>
            <th class="text-light">
                Población
            </th>
            <th class="text-light">
                Código Postal
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nif)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefono)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Direccion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Poblacion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CodigoPostal)
            </td>
            <td>
                    <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                    <a class="btn btn-outline-dark" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i></a>
                    <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-x-lg"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>

@* Poner botones de página Siguiente y Anterior *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="text-center">
    <p>Numero de páginas: @Model.TotalPages</p>
</div>
<div class="d-flex justify-content-center">
    <div class="btn-group text-center w-20" role="group">
        <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="btn btn-outline-secondary @prevDisabled">
            Anterior
        </a>
        <button class="btn btn-dark text-light">@Model.PageIndex</button>
        <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
           class="btn btn-outline-secondary @nextDisabled">
            Siguiente
        </a>
    </div>
</div>
